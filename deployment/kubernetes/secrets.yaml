# NOTE: In production, use proper secret management tools like:
# - Kubernetes Secrets with encryption at rest
# - External secret management (AWS Secrets Manager, HashiCorp Vault, etc.)
# - Sealed Secrets or External Secrets Operator

apiVersion: v1
kind: Secret
metadata:
  name: fact-checker-secrets
  namespace: fact-checker
type: Opaque
stringData:
  # Database Credentials
  DATABASE_PASSWORD: "your-secure-database-password"
  DATABASE_USER: "fact_checker"
  
  # API Keys (Base64 encoded in production)
  SECRET_KEY: "your-super-secret-jwt-key-change-this-in-production"
  OPENAI_API_KEY: "sk-your-openai-api-key"
  ANTHROPIC_API_KEY: "sk-ant-your-anthropic-api-key"
  MISTRAL_API_KEY: "your-mistral-api-key"
  
  # External Service Credentials
  SENDGRID_API_KEY: "SG.your-sendgrid-api-key"
  STRIPE_SECRET_KEY: "sk_live_your-stripe-secret-key"
  STRIPE_WEBHOOK_SECRET: "whsec_your-stripe-webhook-secret"
  
  # AWS Credentials (for S3 storage)
  AWS_ACCESS_KEY_ID: "your-aws-access-key"
  AWS_SECRET_ACCESS_KEY: "your-aws-secret-key"
  
  # Redis Password (if using AUTH)
  REDIS_PASSWORD: "your-redis-password"
  
  # Monitoring and Alerting
  SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  PAGERDUTY_API_KEY: "your-pagerduty-api-key"
  
  # SSL/TLS Certificates (if not using cert-manager)
  TLS_CERT: |
    -----BEGIN CERTIFICATE-----
    # Your SSL certificate content
    -----END CERTIFICATE-----
  TLS_KEY: |
    -----BEGIN PRIVATE KEY-----
    # Your SSL private key content
    -----END PRIVATE KEY-----

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: fact-checker
type: Opaque
stringData:
  POSTGRES_DB: "fact_checker_db"
  POSTGRES_USER: "fact_checker"
  POSTGRES_PASSWORD: "your-secure-database-password"

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: fact-checker
type: Opaque
stringData:
  REDIS_PASSWORD: "your-redis-password"

---
# Docker Registry Secret (if using private registry)
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry-secret
  namespace: fact-checker
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    {
      "auths": {
        "your-registry.com": {
          "username": "your-username",
          "password": "your-password",
          "auth": "base64-encoded-username:password"
        }
      }
    }
