apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: fact-checker
  labels:
    app: dspy-fact-checker
    component: celery-worker
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: dspy-fact-checker
      component: celery-worker
  template:
    metadata:
      labels:
        app: dspy-fact-checker
        component: celery-worker
        version: v1.0.0
    spec:
      serviceAccountName: fact-checker-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: celery-worker
        image: fact-checker:latest  # Replace with your actual image
        imagePullPolicy: Always
        command: ["celery"]
        args: ["-A", "app.core.celery", "worker", "--loglevel=info", "--concurrency=4", "--max-tasks-per-child=1000"]
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: ENVIRONMENT
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: DATABASE_NAME
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: fact-checker-secrets
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fact-checker-secrets
              key: DATABASE_PASSWORD
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: CELERY_RESULT_BACKEND
        - name: QDRANT_URL
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: QDRANT_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fact-checker-secrets
              key: SECRET_KEY
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: fact-checker-secrets
              key: ANTHROPIC_API_KEY
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: fact-checker-secrets
              key: OPENAI_API_KEY
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: app-uploads
          mountPath: /app/uploads
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 4Gi
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "celery -A app.core.celery inspect ping -d celery@$HOSTNAME"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: app-logs
        persistentVolumeClaim:
          claimName: app-logs-pvc
      - name: app-uploads
        persistentVolumeClaim:
          claimName: app-uploads-pvc
      restartPolicy: Always
      terminationGracePeriodSeconds: 60

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: fact-checker
  labels:
    app: dspy-fact-checker
    component: celery-beat
    version: v1.0.0
spec:
  replicas: 1  # Only one beat scheduler needed
  strategy:
    type: Recreate  # Ensure only one beat instance runs
  selector:
    matchLabels:
      app: dspy-fact-checker
      component: celery-beat
  template:
    metadata:
      labels:
        app: dspy-fact-checker
        component: celery-beat
        version: v1.0.0
    spec:
      serviceAccountName: fact-checker-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: celery-beat
        image: fact-checker:latest  # Replace with your actual image
        imagePullPolicy: Always
        command: ["celery"]
        args: ["-A", "app.core.celery", "beat", "--loglevel=info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: ENVIRONMENT
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: DATABASE_NAME
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: fact-checker-secrets
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fact-checker-secrets
              key: DATABASE_PASSWORD
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: fact-checker-config
              key: CELERY_RESULT_BACKEND
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fact-checker-secrets
              key: SECRET_KEY
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: app-logs
        persistentVolumeClaim:
          claimName: app-logs-pvc
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: celery-worker-hpa
  namespace: fact-checker
  labels:
    app: dspy-fact-checker
    component: celery-worker
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: celery-worker
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: celery-worker-pdb
  namespace: fact-checker
  labels:
    app: dspy-fact-checker
    component: celery-worker
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: dspy-fact-checker
      component: celery-worker
